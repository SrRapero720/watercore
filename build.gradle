plugins {
    id 'java'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

base {
    archivesName = modid
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

version = modversion
group = 'me.srrapero720'

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mappingsch, version: mappings_version
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'terminal.jline', 'true'
            arg "-mixin.config=${modid}.${mixin_file_suffix}"

            mods {
                "${modid}" {
                    source sourceSets.main
                }
            }
        }

        client {}
        server {}
    }
}

// Include resources generated by data generators.
sourceSets.main.resources { srcDir 'src/generated/resources' }

mixin {
    add sourceSets.main, "${modid}.${mixin_refmap_suffix}"
    config "${modid}.${mixin_file_suffix}"
}

repositories {
    maven { url "https://maven.tterrag.com/" }
    maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    //BASICS
    minecraft "net.minecraftforge:forge:${mcversion}-${fgversion}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    // CREATE STUFF
    implementation fg.deobf("com.simibubi.create:create-${mcversion}:${createversion}:slim") { transitive = false }
    implementation fg.deobf("com.jozufozu.flywheel:flywheel-forge-${mcversion}:${flywheelversion}")
    implementation fg.deobf("com.tterrag.registrate:Registrate:${registrateversion}")

    // SUIT OF FANCYMENU
    implementation files("libs/drippy2.1.2.jar", "libs/fancymenu2.14.2.jar", "libs/konkrete1.6.0.jar")

    // SUPPORT FOR OTHER MODS
    implementation fg.deobf("curse.maven:ferritecore-429235:4074294")
    implementation fg.deobf("curse.maven:fastload-630620:4271605")
    implementation fg.deobf("curse.maven:lazy-dfu-forge-460819:3544496")

    //MIXIN: VM423535
    implementation fg.deobf("curse.maven:vanishmod-423535:4324040")

    //MIXIN: SL312664
    implementation fg.deobf("curse.maven:simple-login-312664:3864949")

    //LUCKPERMS
    implementation fg.deobf("net.luckperms:api:5.4")
}



jar {
    manifest {
        attributes([
                "Specification-Title": modid,
                "Specification-Vendor": modauthor,
                "Specification-Version": modversion,
                "Implementation-Title": modname,
                "Implementation-Version": modversion,
                "Implementation-Vendor" : modauthor,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs": "${modid}.${mixin_file_suffix}"
        ])
    }
}
// Process target resources with mod info
tasks.processResources.outputs.upToDateWhen { false }
processResources {
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta', "${modid}.${mixin_file_suffix}".toString()]) {
        expand(rootProject.properties)
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}